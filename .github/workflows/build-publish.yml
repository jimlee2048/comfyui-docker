name: "Docker Build and Publish"

on:
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: "Force rebuild"
        default: true
        required: true
        type: boolean

  schedule:
    - cron: "0 0 * * *"
  push:
    branches: [main]
    paths:
      - "Dockerfile.*"
      - "comfyui_helper/**"
      - ".github/workflows/build-publish.yml"

jobs:
  fetch-upstream:
    runs-on: ubuntu-latest
    outputs:
      is_new_latest: ${{ inputs.force_rebuild || github.event_name == 'push' || !steps.cache-latest-tag.outputs.cache-hit }}
      latest_tag: ${{ steps.get-latest-tag.outputs.comfyui }}
      is_new_nightly: ${{ inputs.force_rebuild || github.event_name == 'push' || !steps.cache-nightly-hash.outputs.cache-hit }}
      nightly_hash: ${{ steps.get-nightly-hash.outputs.comfyui }}

    steps:
      - name: Get latest release tag
        id: get-latest-tag
        run: |
          LATEST_COMFYUI=$(curl -sL https://api.github.com/repos/comfyanonymous/ComfyUI/releases/latest | jq -r .tag_name)
          echo "comfyui=$LATEST_COMFYUI" >> $GITHUB_OUTPUT

      - name: Get nightly commit hash
        id: get-nightly-hash
        run: |
          NIGHTLY_COMFYUI=$(curl -sL https://api.github.com/repos/comfyanonymous/ComfyUI/commits/master | jq -r .sha)
          echo "comfyui=$NIGHTLY_COMFYUI" >> $GITHUB_OUTPUT

      - name: Compare ComfyUI release tag
        id: cache-latest-tag
        uses: actions/cache@v3
        with:
          path: .latest-tag
          key: ${{ steps.get-latest-tag.outputs.comfyui }}

      - name: Compare ComfyUI nightly hash
        id: cache-nightly-hash
        uses: actions/cache@v3
        with:
          path: .nightly-hash
          key: ${{ steps.get-nightly-hash.outputs.comfyui }}

      - name: Save new release tag
        if: steps.cache-latest-tag.outputs.cache-hit != 'true'
        run: echo ${{ steps.get-latest-tag.outputs.comfyui }} | tee .latest-tag

      - name: Save new nightly hash
        if: steps.cache-nightly-hash.outputs.cache-hit != 'true'
        run: echo ${{ steps.get-nightly-hash.outputs.comfyui }} | tee .nightly-hash

  build-latest-cuda:
    needs: fetch-upstream
    runs-on: ubuntu-latest
    if: needs.fetch-upstream.outputs.is_new_latest == 'true'
    steps:
      - name: Backup /var/lib/docker/*
        run: sudo mv /var/lib/docker/ "${GITHUB_WORKSPACE}/temp-docker"

      - name: Maximize build disk space
        uses: easimon/maximize-build-space@master
        with:
          overprovision-lvm: "true"
          swap-size-mb: 8192
          remove-android: "true"
          remove-dotnet: "true"
          build-mount-path: "/var/lib/docker/"

      - name: Restore /var/lib/docker/*
        run: sudo sh -c "mv ${GITHUB_WORKSPACE}/temp-docker/* /var/lib/docker"

      - name: Git checkout
        uses: actions/checkout@v4

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/comfyui-docker
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ needs.fetch-upstream.outputs.latest_tag }},enable={{is_default_branch}}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.cuda
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            COMFYUI_VERSION=${{ needs.fetch-upstream.outputs.latest_tag }}

  build-nightly-cuda:
    needs: fetch-upstream
    runs-on: ubuntu-latest
    if: needs.fetch-upstream.outputs.is_new_nightly == 'true'
    steps:
      - name: Backup /var/lib/docker/*
        run: sudo mv /var/lib/docker/ "${GITHUB_WORKSPACE}/temp-docker"

      - name: Maximize build disk space
        uses: easimon/maximize-build-space@master
        with:
          overprovision-lvm: "true"
          swap-size-mb: 8192
          remove-android: "true"
          remove-dotnet: "true"
          build-mount-path: "/var/lib/docker/"

      - name: Restore /var/lib/docker/*
        run: sudo sh -c "mv ${GITHUB_WORKSPACE}/temp-docker/* /var/lib/docker"

      - name: Git checkout
        uses: actions/checkout@v4

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/comfyui-docker
          tags: |
            type=raw,value=nightly,enable={{is_default_branch}}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.cuda
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            COMFYUI_VERSION=master
